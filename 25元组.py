# 作者： 世界第一大帅哥
# 开发时间 2022/1/11 17:54
# 元组

# 什么是元组？
# Python的内置数据结构之一，是一个不可变序列（即没有增、删、改的操作）

# 元组的创建方式
# 1、直接小括号：
t = ('Python', 'Hello', 90)
print(t, type(t))
# 2、直接等号：
t = 'Python', 'Hello', 90    # 省略小括号
print(t, type(t))
# 3、使用内置函数tuple()：
t = tuple(('Python', 'Hello', 90))     # 外层括号属于tuple()函数，内层括号表示元组
print(t, type(t))
# 4、只包含一个元素的元组需要同时使用小括号和逗号（否则会被识别为字符串）：
t = ('Python',)
print(t, type(t))
# 5、空元组：
# 方法一：
t = ()
print(t)
# 方法二：
t = tuple()
print(t)

'''
   为什么将元组设计成不可变序列？
   在多任务环境下，如果设计成可变序列，若想实现多任务同时对同一对象进行增、删、改操作，
   就必须加锁（当第一个任务对对象进行增、删、改操作时，不允许其他任务对对象进行操作），这样的程序显得相当复杂
   因此，在程序中尽量使用不可变序列（只允许访问和查看对象，但不允许进行增、删、改的操作）
   因此，将元组设计成不可变序列
   
   注意事项：元组中储存的是对象的引用
   1、如果元组中对象本身不可对象，则不能再引用其他对象；
   2、如果元组中对象是可变对象，则可变对象的引用不允许改变，但数据可以改变。
   解释：
   若元组中的对象是整型、浮点型、布尔型等数据类型，则不可对该对象进行增、删、改的操作；
   若元组中的对象是列表，则保持列表的id不变、列表与所在元组中其他元素的关系不变，可以对列表内部的值进行增、删、改操作
'''

# 元组的遍历
# 元组是可迭代对象，可以用for-in进行遍历
t = ('Python', 'Hello', 90)
for item in t:
    print(item)
